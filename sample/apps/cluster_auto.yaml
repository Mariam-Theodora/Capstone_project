# apiVersion: argoproj.io/v1alpha1
# kind: Application
# metadata:
#   name: clusterauto
#   namespace: argocd
#   finalizers:
#     - resources-finalizer.argocd.argoproj.io
# spec:
#   destination:
#     namespace: argocd
#     server: https://kubernetes.default.svc
#   project: default
#   sources:
#   - repoURL: https://github.com/saluteslim/tera-eks
#     targetRevision: HEAD
#     ref: exam
#   - repoURL: https://kubernetes.github.io/autoscaler
#     chart: cluster-autoscaler
#     targetRevision: 9.29.1
#     helm:
#       values: |         
#         autoDiscovery:
#           # cloudProviders `aws`, `gce`, `azure`, `magnum` and `clusterapi` `oci-oke` are supported by auto-discovery at this time
#           # AWS: Set tags as described in https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md#auto-discovery-setup
        
#           # autoDiscovery.clusterName -- Enable autodiscovery for `cloudProvider=aws`, for groups matching `autoDiscovery.tags`.
#           # autoDiscovery.clusterName -- Enable autodiscovery for `cloudProvider=azure`, using tags defined in https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/azure/README.md#auto-discovery-setup.
#           # Enable autodiscovery for `cloudProvider=clusterapi`, for groups matching `autoDiscovery.labels`.
#           # Enable autodiscovery for `cloudProvider=gce`, but no MIG tagging required.
#           # Enable autodiscovery for `cloudProvider=magnum`, for groups matching `autoDiscovery.roles`.
#           clusterName:  Alt-eks
        
#           # autoDiscovery.tags -- ASG tags to match, run through `tpl`.
#           tags:
#             - k8s.io/cluster-autoscaler/enabled
#             - k8s.io/cluster-autoscaler/{{ .Values.autoDiscovery.clusterName }}
#           # - kubernetes.io/cluster/{{ .Values.autoDiscovery.clusterName }}
        
#           # autoDiscovery.roles -- Magnum node group roles to match.
#           roles:
#             - worker
        
#           # autoDiscovery.labels -- Cluster-API labels to match  https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/clusterapi/README.md#configuring-node-group-auto-discovery
#           labels: []
#             # - color: green
#             # - shape: circle
#         # autoscalingGroups -- For AWS, Azure AKS or Magnum. At least one element is required if not using `autoDiscovery`. For example:
#         # <pre>
#         # - name: asg1<br />
#         #   maxSize: 2<br />
#         #   minSize: 1
#         # </pre>
#         autoscalingGroups: []
#         # - name: asg1
#         #   maxSize: 2
#         #   minSize: 1
#         # - name: asg2
#         #   maxSize: 2
#         #   minSize: 1
        
#         # autoscalingGroupsnamePrefix -- For GCE. At least one element is required if not using `autoDiscovery`. For example:
#         # <pre>
#         # - name: ig01<br />
#         #   maxSize: 10<br />
#         #   minSize: 0
#         # </pre>
#         autoscalingGroupsnamePrefix: []
#         # - name: ig01
#         #   maxSize: 10
#         #   minSize: 0
#         # - name: ig02
#         #   maxSize: 10
#         #   minSize: 0
        
#         # awsAccessKeyID -- AWS access key ID ([if AWS user keys used](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md#using-aws-credentials))
#         awsAccessKeyID: ""

        
#         # awsRegion -- AWS region (required if `cloudProvider=aws`)
#         awsRegion: eu-west-2
        
#         # awsSecretAccessKey -- AWS access secret key ([if AWS user keys used](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md#using-aws-credentials))
#         awsSecretAccessKey: ""

#         cloudProvider: aws

#         sslCertPath: /etc/kubernetes/pki/ca.crt

#         rbac:
#         ## If true, create & use RBAC resources
#         ##
#           create: true

#   syncPolicy:
#     automated:
#       prune: true
#       selfHeal: true
#     syncOptions:
#     - CreateNamespace=true
